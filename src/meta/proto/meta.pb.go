// Code generated by protoc-gen-go.
// source: meta.proto
// DO NOT EDIT!

/*
Package metaproto is a generated protocol buffer package.

It is generated from these files:
	meta.proto

It has these top-level messages:
	Host
	Device
	Container
	Volume
*/
package metaproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Host struct {
	Ip               []byte   `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Status           []byte   `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Optime           []byte   `protobuf:"bytes,3,opt,name=optime" json:"optime,omitempty"`
	Devices          [][]byte `protobuf:"bytes,4,rep,name=devices" json:"devices,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Host) Reset()                    { *m = Host{} }
func (m *Host) String() string            { return proto.CompactTextString(m) }
func (*Host) ProtoMessage()               {}
func (*Host) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Host) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Host) GetStatus() []byte {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Host) GetOptime() []byte {
	if m != nil {
		return m.Optime
	}
	return nil
}

func (m *Host) GetDevices() [][]byte {
	if m != nil {
		return m.Devices
	}
	return nil
}

type Device struct {
	Id               []byte `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Host             []byte `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Port             []byte `protobuf:"bytes,3,opt,name=port" json:"port,omitempty"`
	Total            []byte `protobuf:"bytes,4,opt,name=total" json:"total,omitempty"`
	Free             []byte `protobuf:"bytes,5,opt,name=free" json:"free,omitempty"`
	Status           []byte `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	Identify         []byte `protobuf:"bytes,7,opt,name=identify" json:"identify,omitempty"`
	Volumekey        []byte `protobuf:"bytes,8,opt,name=volumekey" json:"volumekey,omitempty"`
	Backend          []byte `protobuf:"bytes,9,opt,name=backend" json:"backend,omitempty"`
	Optime           []byte `protobuf:"bytes,10,opt,name=optime" json:"optime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Device) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Device) GetHost() []byte {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *Device) GetPort() []byte {
	if m != nil {
		return m.Port
	}
	return nil
}

func (m *Device) GetTotal() []byte {
	if m != nil {
		return m.Total
	}
	return nil
}

func (m *Device) GetFree() []byte {
	if m != nil {
		return m.Free
	}
	return nil
}

func (m *Device) GetStatus() []byte {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Device) GetIdentify() []byte {
	if m != nil {
		return m.Identify
	}
	return nil
}

func (m *Device) GetVolumekey() []byte {
	if m != nil {
		return m.Volumekey
	}
	return nil
}

func (m *Device) GetBackend() []byte {
	if m != nil {
		return m.Backend
	}
	return nil
}

func (m *Device) GetOptime() []byte {
	if m != nil {
		return m.Optime
	}
	return nil
}

type Container struct {
	Id               []byte                    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Status           []byte                    `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Optime           []byte                    `protobuf:"bytes,3,opt,name=optime" json:"optime,omitempty"`
	Volumes          []*Container_AttachVolume `protobuf:"bytes,4,rep,name=volumes" json:"volumes,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *Container) Reset()                    { *m = Container{} }
func (m *Container) String() string            { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()               {}
func (*Container) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Container) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Container) GetStatus() []byte {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Container) GetOptime() []byte {
	if m != nil {
		return m.Optime
	}
	return nil
}

func (m *Container) GetVolumes() []*Container_AttachVolume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type Container_AttachVolume struct {
	Volumeid         []byte `protobuf:"bytes,1,opt,name=volumeid" json:"volumeid,omitempty"`
	Mode             []byte `protobuf:"bytes,2,opt,name=mode" json:"mode,omitempty"`
	Driver           []byte `protobuf:"bytes,3,opt,name=driver" json:"driver,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Container_AttachVolume) Reset()                    { *m = Container_AttachVolume{} }
func (m *Container_AttachVolume) String() string            { return proto.CompactTextString(m) }
func (*Container_AttachVolume) ProtoMessage()               {}
func (*Container_AttachVolume) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *Container_AttachVolume) GetVolumeid() []byte {
	if m != nil {
		return m.Volumeid
	}
	return nil
}

func (m *Container_AttachVolume) GetMode() []byte {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *Container_AttachVolume) GetDriver() []byte {
	if m != nil {
		return m.Driver
	}
	return nil
}

type Volume struct {
	Id               []byte                   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Status           []byte                   `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Capacity         []byte                   `protobuf:"bytes,3,opt,name=capacity" json:"capacity,omitempty"`
	Writable         []byte                   `protobuf:"bytes,4,opt,name=writable" json:"writable,omitempty"`
	Optime           []byte                   `protobuf:"bytes,5,opt,name=optime" json:"optime,omitempty"`
	Containers       []*Volume_OwnerContainer `protobuf:"bytes,6,rep,name=containers" json:"containers,omitempty"`
	Devices          []*Volume_AttachDevice   `protobuf:"bytes,7,rep,name=devices" json:"devices,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *Volume) Reset()                    { *m = Volume{} }
func (m *Volume) String() string            { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()               {}
func (*Volume) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Volume) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Volume) GetStatus() []byte {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Volume) GetCapacity() []byte {
	if m != nil {
		return m.Capacity
	}
	return nil
}

func (m *Volume) GetWritable() []byte {
	if m != nil {
		return m.Writable
	}
	return nil
}

func (m *Volume) GetOptime() []byte {
	if m != nil {
		return m.Optime
	}
	return nil
}

func (m *Volume) GetContainers() []*Volume_OwnerContainer {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *Volume) GetDevices() []*Volume_AttachDevice {
	if m != nil {
		return m.Devices
	}
	return nil
}

type Volume_OwnerContainer struct {
	Containerid      []byte `protobuf:"bytes,1,opt,name=containerid" json:"containerid,omitempty"`
	Mode             []byte `protobuf:"bytes,2,opt,name=mode" json:"mode,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Volume_OwnerContainer) Reset()                    { *m = Volume_OwnerContainer{} }
func (m *Volume_OwnerContainer) String() string            { return proto.CompactTextString(m) }
func (*Volume_OwnerContainer) ProtoMessage()               {}
func (*Volume_OwnerContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

func (m *Volume_OwnerContainer) GetContainerid() []byte {
	if m != nil {
		return m.Containerid
	}
	return nil
}

func (m *Volume_OwnerContainer) GetMode() []byte {
	if m != nil {
		return m.Mode
	}
	return nil
}

type Volume_AttachDevice struct {
	Deviceid         []byte `protobuf:"bytes,1,opt,name=deviceid" json:"deviceid,omitempty"`
	Status           []byte `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Volume_AttachDevice) Reset()                    { *m = Volume_AttachDevice{} }
func (m *Volume_AttachDevice) String() string            { return proto.CompactTextString(m) }
func (*Volume_AttachDevice) ProtoMessage()               {}
func (*Volume_AttachDevice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 1} }

func (m *Volume_AttachDevice) GetDeviceid() []byte {
	if m != nil {
		return m.Deviceid
	}
	return nil
}

func (m *Volume_AttachDevice) GetStatus() []byte {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*Host)(nil), "metaproto.Host")
	proto.RegisterType((*Device)(nil), "metaproto.Device")
	proto.RegisterType((*Container)(nil), "metaproto.Container")
	proto.RegisterType((*Container_AttachVolume)(nil), "metaproto.Container.AttachVolume")
	proto.RegisterType((*Volume)(nil), "metaproto.Volume")
	proto.RegisterType((*Volume_OwnerContainer)(nil), "metaproto.Volume.OwnerContainer")
	proto.RegisterType((*Volume_AttachDevice)(nil), "metaproto.Volume.AttachDevice")
}

var fileDescriptor0 = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x52, 0x3d, 0x6f, 0xf2, 0x30,
	0x10, 0x56, 0xf8, 0x48, 0xc8, 0x91, 0x97, 0xb7, 0xa5, 0x8b, 0xc5, 0x50, 0xd1, 0x4c, 0x4c, 0x69,
	0x45, 0x3b, 0x57, 0xaa, 0xe8, 0xd0, 0xad, 0x5b, 0x77, 0x93, 0x1c, 0xc2, 0x82, 0xc4, 0x51, 0x72,
	0x80, 0xf8, 0x3d, 0x95, 0xba, 0xf4, 0x4f, 0xd6, 0xb1, 0x1d, 0x42, 0xe9, 0xd7, 0xe6, 0xe7, 0x9c,
	0x7b, 0xbe, 0x62, 0x80, 0x14, 0x89, 0x47, 0x79, 0x21, 0x49, 0x0e, 0xfd, 0xea, 0xac, 0x8f, 0xe1,
	0x0c, 0x3a, 0x4f, 0xb2, 0xa4, 0x21, 0x40, 0x4b, 0xe4, 0xcc, 0x19, 0x3b, 0x93, 0x60, 0x38, 0x00,
	0xb7, 0x24, 0x4e, 0x9b, 0x92, 0xb5, 0x6a, 0x2c, 0x73, 0x12, 0x29, 0xb2, 0xb6, 0xc6, 0xff, 0xc1,
	0x4b, 0x70, 0x2b, 0x62, 0x2c, 0x59, 0x67, 0xdc, 0x9e, 0x04, 0xe1, 0xab, 0x03, 0xee, 0xa3, 0x9e,
	0x68, 0x9e, 0xc4, 0xf2, 0x04, 0xd0, 0x59, 0x2a, 0x6e, 0xcb, 0xa2, 0x50, 0x2e, 0x0b, 0xb2, 0x1c,
	0xff, 0xa0, 0x4b, 0x92, 0xf8, 0x5a, 0x31, 0xd8, 0xcb, 0x45, 0x81, 0xc8, 0xba, 0x27, 0x06, 0x5c,
	0x8d, 0xcf, 0xa0, 0x27, 0x12, 0xcc, 0x48, 0x2c, 0xf6, 0xcc, 0xd3, 0x93, 0x73, 0xf0, 0xb7, 0x72,
	0xbd, 0x49, 0x71, 0x85, 0x7b, 0xd6, 0xab, 0x5d, 0xcd, 0x79, 0xbc, 0xc2, 0x2c, 0x61, 0xfe, 0x89,
	0x6d, 0xa8, 0x70, 0xf8, 0xee, 0x80, 0x3f, 0x93, 0x19, 0x71, 0x91, 0x61, 0xf1, 0xc9, 0xe8, 0x5f,
	0x81, 0xa7, 0xe0, 0x19, 0x35, 0x13, 0xb8, 0x3f, 0xbd, 0x8a, 0x0e, 0x0d, 0x46, 0x07, 0xca, 0xe8,
	0x81, 0x88, 0xc7, 0xcb, 0x17, 0xfd, 0xe5, 0xe8, 0x1e, 0x82, 0x63, 0x5c, 0x65, 0x30, 0x1c, 0xc7,
	0xf5, 0xa4, 0x32, 0xc1, 0x46, 0x33, 0x29, 0xc4, 0x16, 0x0b, 0xa3, 0x19, 0xbe, 0xb5, 0xc0, 0xb5,
	0xab, 0xbf, 0x59, 0x55, 0xb4, 0x31, 0xcf, 0x79, 0x2c, 0x68, 0x6f, 0xcd, 0xaa, 0xc9, 0xae, 0x10,
	0xc4, 0xe7, 0x6b, 0xb4, 0xe5, 0x36, 0x71, 0x4c, 0xbd, 0x77, 0x00, 0x71, 0x6d, 0xba, 0xaa, 0xb8,
	0x4a, 0x34, 0x3e, 0x4a, 0x64, 0x64, 0xa3, 0xe7, 0x9d, 0xba, 0x6f, 0x0a, 0xbb, 0x6e, 0xfe, 0xba,
	0xa7, 0x57, 0x2e, 0xbf, 0xae, 0x98, 0xc4, 0xe6, 0x29, 0x8c, 0x6e, 0x61, 0x70, 0x42, 0x71, 0x01,
	0xfd, 0x83, 0xf0, 0xf7, 0x35, 0x8c, 0x6e, 0xea, 0xda, 0xec, 0x7b, 0x52, 0x69, 0x8c, 0xea, 0x4f,
	0x0d, 0x7c, 0x04, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x51, 0x72, 0x94, 0xd9, 0x02, 0x00, 0x00,
}
